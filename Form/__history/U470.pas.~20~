unit U470;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, d_MainDm, h_MainLib, h_ReferLib, StdCtrls, DB, ADODB,
  Grids, StrUtils, DBGrids, comobj, frxClass, frxDBSet, DBGridEhGrouping, EhLibADO,
  ToolCtrlsEh, DBGridEhToolCtrls, DynVarsEh, EhLibVCL, GridsEh, DBAxisGridsEh,DBGridEhImpExp,
  DBGridEh, Vcl.Mask, Vcl.DBCtrls, DBCtrlsEh, PrnDbgeh, Vcl.Buttons, Vcl.Menus,
  Vcl.ComCtrls ;

type
  TfrmU470 = class(TForm)
    Pnl_Main: TPanel;
    Pnl_Top: TPanel;
    Panel2: TPanel;
    Panel3: TPanel;
    shpB: TShape;
    shpL: TShape;
    shpR: TShape;
    shpT: TShape;
    Panel5: TPanel;
    Panel6: TPanel;
    DatePicker1: TDateTimePicker;
    DatePicker2: TDateTimePicker;
    Panel1: TPanel;
    Panel4: TPanel;
    TimePicker1: TDateTimePicker;
    TimePicker2: TDateTimePicker;
    cbDate: TCheckBox;
    dgInfo: TDBGridEh;
    dsInfo: TDataSource;
    qryInfo: TADOQuery;
    EhPrint: TPrintDBGridEh;
    Splitter: TSplitter;
    dgInfo_Sub: TDBGridEh;
    dsInfo_Sub: TDataSource;
    qryInfo_Sub: TADOQuery;
    Panel7: TPanel;
    cbALC_CODE: TComboBox;
    Panel8: TPanel;
    cbPLT: TCheckBox;
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormDeactivate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure dgInfoTitleClick(Column: TColumnEh);
    procedure KeyPress(Sender: TObject; var Key: Char);
    procedure cbDateClick(Sender: TObject);
    procedure DatePicker2Change(Sender: TObject);
    procedure dgInfoDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumnEh; State: TGridDrawState);
    procedure dgInfoCellClick(Column: TColumnEh);
    procedure dgInfo_SubDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumnEh; State: TGridDrawState);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure fnCommandStart;
    procedure fnCommandAdd  ;
    procedure fnCommandExcel;
    procedure fnCommandDelete;
    procedure fnCommandPrint;
    procedure fnCommandQuery;
    procedure fnCommandClose;
    procedure fnWmMsgRecv (var MSG : TMessage) ; message WM_USER ;
    procedure SetComboBox ;
  end;
  procedure U470Create();

const
  FormNo ='470';

var
  frmU470: TfrmU470;
  SrtFlag : integer = 0 ;

  TmpLine : String;

implementation

uses Main;

{$R *.dfm}

//==============================================================================
// U470Create
//==============================================================================
procedure U470Create();
begin
  if not Assigned( frmU470 ) then
  begin
    frmU470 := TfrmU470.Create(Application);
    with frmU470 do
    begin
      fnCommandStart;
    end;
  end;
  frmU470.Show;
end;

//==============================================================================
// fnWmMsgRecv
//==============================================================================
procedure TfrmU470.fnWmMsgRecv(var MSG: TMessage);
begin
  case MSG.WParam of
    MSG_MDI_WIN_ADD     : begin fnCommandAdd     ; end;
    MSG_MDI_WIN_EXCEL   : begin fnCommandExcel   ; end;
    MSG_MDI_WIN_DELETE  : begin fnCommandDelete  ; end;
    MSG_MDI_WIN_PRINT   : begin fnCommandPrint   ; end;
    MSG_MDI_WIN_QUERY   : begin fnCommandQuery   ; end;
    MSG_MDI_WIN_CLOSE   : begin fnCommandClose   ; Close; end;
  end;
end;

//==============================================================================
// FormCreate
//==============================================================================
procedure TfrmU470.FormCreate(Sender: TObject);
begin
  DatePicker1.Date := Now;
  DatePicker2.Date := Now + 1;
end;

//==============================================================================
// FormShow
//==============================================================================
procedure TfrmU470.FormShow(Sender: TObject);
begin
//
end;

//==============================================================================
// FormActivate
//==============================================================================
procedure TfrmU470.FormActivate(Sender: TObject);
begin
  frmMain.LblMenu000.Caption := (Sender as TForm).Caption ;
  fnWmMsgSend( 21211,111 );
  cbPLT.Checked := True;
  fnCommandQuery ;
end;

//==============================================================================
// FormDeactivate
//==============================================================================
procedure TfrmU470.FormDeactivate(Sender: TObject);
var
  i : integer ;
begin
  for i := 0 to Self.ComponentCount-1 do
  begin
    if (Self.Components[i] is TTimer) then
       (Self.Components[i] as TTimer).Enabled := False ;
  end;
end;

//==============================================================================
// FormClose
//==============================================================================
procedure TfrmU470.FormClose(Sender: TObject; var Action: TCloseAction);
var
  i : integer ;
begin
  for i := 0 to Self.ComponentCount-1 do
  begin
    if (Self.Components[i] is TTimer) then
       (Self.Components[i] as TTimer).Enabled := False ;
  end;

  for i := 0 to Self.ComponentCount-1 Do
  begin
    if (Self.Components[i] is TADOQuery) then
       (Self.Components[i] as TADOQuery).Active := False ;
  end;

  Action := Cafree;
  try frmU470 := Nil ;
  except end;
end;

//==============================================================================
// fnCommandStart [시작]
//==============================================================================
procedure TfrmU470.fnCommandStart;
begin
  SetComboBox;
  TmpLine := '1';
end;

//==============================================================================
// fnCommandAdd [신규]
//==============================================================================
procedure TfrmU470.fnCommandAdd  ;
begin
//
end;

//==============================================================================
// fnCommandExcel [엑셀]
//==============================================================================
procedure TfrmU470.fnCommandExcel;
begin
  if hlbEhgridListExcel ( dgInfo_Sub , '라인별 입고실적' + '_' + FormatDatetime('YYYYMMDD', Now) ) then
  begin
    MessageDlg('엑셀 저장을 완료하였습니다.', mtConfirmation, [mbYes], 0);
  end;
end;

//==============================================================================
// fnCommandDelete [삭제]
//==============================================================================
procedure TfrmU470.fnCommandDelete;
begin
//
end;

//==============================================================================
// fnCommandPrint [인쇄]
//==============================================================================
procedure TfrmU470.fnCommandPrint;
begin
  if not qryInfo_Sub.Active then Exit;
//  fnCommandQuery;
  EhPrint.DBGridEh := dgInfo_Sub;
  EhPrint.PageFooter.RightText.Clear;
  EhPrint.PageFooter.RightText.Add(FormatDateTime('YYYY-MM-DD HH:NN:SS',Now()) + '   ' + MainDM.M_Info.UserCode);
  EhPrint.PageFooter.Font.Name := '돋움';
  EhPrint.PageFooter.Font.Size := 11;
  EhPrint.Preview;
end;

//==============================================================================
// fnCommandQuery [조회]
//==============================================================================
procedure TfrmU470.fnCommandQuery;
var
  StrSQL, WhereStr : String;
  Date1, Date2, Time1, Time2 : String;
begin
  Date1 := FormatDateTime('YYYYMMDD', DatePicker1.Date);
  Date2 := FormatDateTime('YYYYMMDD', DatePicker2.Date);
  Time1 := FormatDateTime('HHMMSS', TimePicker1.Time);
  Time2 := FormatDateTime('HHMMSS', TimePicker2.Time);

  // 일자입력
  if cbDate.Checked then
  begin
    WhereStr := ' AND TRN_DATE + TRN_TIME BETWEEN ' + QuotedStr(Date1 + Time1) + ' AND ' + QuotedStr(Date2 + Time2) ;
  end else WhereStr := '';

  // 차량코드
  if (cbALC_CODE.Text <> '전체') and (Trim(cbALC_CODE.Text) <> '') then
    WhereStr := WhereStr + ' AND ORD_ALC_CODE LIKE ' + QuotedStr('%'+cbALC_CODE.Text+'%') ;

  // 공파레트 제외
  if cbPLT.Checked then
    WhereStr := WhereStr + ' AND ORD_ALC_CODE <> ''00000'' ';

  try
    with qryInfo do
    begin
      Close;
      SQL.Clear;
      StrSQL := ' Select LINE, BUFF_NO, SUM(IN_CNT) AS IN_CNT ' +
                '   From( ' +
                '         Select 1 as Line, ''11'' as BUFF_NO, 0 AS IN_CNT ' +
                '     	   UNION ALL                     ' +
                '         Select 2 as Line, ''02'' as BUFF_NO, 0 AS IN_CNT ' +
                '     	   UNION ALL                     ' +
                '         Select ORD_INPOS as LINE, ''11'' as BUFF_NO, Count(ORD_ALC_CODE) AS IN_CNT ' +
                '  	        From TT_TRANS                ' +
                '  	       Where ORD_TYPE Like ''%입고'' ' + WhereStr +
                '            And ORD_INPOS = ''1''       ' +
                '  	       Group By ORD_INPOS ' +
                '     	   UNION ALL                     ' +
                '         Select ORD_INPOS as LINE, ''02'' as BUFF_NO, Count(ORD_ALC_CODE) AS IN_CNT ' +
                '           From TT_TRANS                ' +
                '          Where ORD_TYPE Like ''%입고'' ' + WhereStr +
                '            And ORD_INPOS = ''2''       ' +
                '          Group By ORD_INPOS ' +
                '       ) AS Total ' +
                '  Where 1=1 ' ;

      StrSQL := StrSQL +  ' Group By LINE, BUFF_NO ' ;
      StrSQL := StrSQL +  ' Order By LINE, BUFF_NO ' ;

      SQL.Text := StrSQL;
      Open;
    end;
  except
    if qryInfo.Active then qryInfo.Close;
  end;
end;

//==============================================================================
// dgInfoCellClick [상세조회]
//==============================================================================
procedure TfrmU470.dgInfoCellClick(Column: TColumnEh);
var
  StrSQL, WhereStr : String;
  Date1, Date2, Time1, Time2 : String;
begin
  TmpLine := qryInfo.FieldByName('LINE').AsString ;

  Date1 := FormatDateTime('YYYYMMDD', DatePicker1.Date);
  Date2 := FormatDateTime('YYYYMMDD', DatePicker2.Date);
  Time1 := FormatDateTime('HHMMSS', TimePicker1.Time);
  Time2 := FormatDateTime('HHMMSS', TimePicker2.Time);

  if cbDate.Checked then
  begin
    WhereStr := ' AND TRN_DATE + TRN_TIME BETWEEN ' + QuotedStr(Date1+Time1) + ' AND ' + QuotedStr(Date2+Time2) ;
//                ' AND TRN_TIME BETWEEN ' + QuotedStr(Time1) + ' AND ' + QuotedStr(Time2);
  end else WhereStr := '';

  try
    with qryInfo_Sub do
    begin
      Close;
      SQL.Clear;
      StrSQL := ' Select ALC_CODE, SUM(IN_CNT) AS IN_CNT, ' +
                '        MAX(DRV_TYPE) as DRV_TYPE, MAX(SEAT_CLASS) as SEAT_CLASS, MAX(COVER_SET) as COVER_SET ' +
                '    From( ' +
                '         Select ORD_ALC_CODE as ALC_CODE, Count(ORD_ALC_CODE) AS IN_CNT ' +
                '  	        From TT_TRANS                ' +
                '  	       Where ORD_TYPE Like ''%입고'' ' +
                '            And ORD_INPOS = ''' + TmpLine + ''' ' + WhereStr +
                '  	       Group By ORD_ALC_CODE         ' +
                '       ) AS Total, TM_ALCC_MASTER ALC   ' +
                '   Where Total.ALC_CODE = ALC.CODE ' ;

      // 차량코드
      if (cbALC_CODE.Text <> '전체') and (Trim(cbALC_CODE.Text) <> '') then
        StrSQL := StrSQL + ' AND Total.ALC_CODE LIKE ' + QuotedStr('%'+cbALC_CODE.Text+'%') ;

      StrSQL := StrSQL +  ' Group By ALC_CODE ' ;
      StrSQL := StrSQL +  ' Order By ALC_CODE ' ;

      SQL.Text := StrSQL;
      Open;
    end;
  except
    if qryInfo_Sub.Active then qryInfo_Sub.Close;
  end;
end;

//==============================================================================
// fnCommandClose [닫기]
//==============================================================================
procedure TfrmU470.fnCommandClose;
begin
  Close;
end;

//==============================================================================
// SetComboBox
//==============================================================================
procedure TfrmU470.SetComboBox;
begin
  MainDm.SearchCodeList(cbALC_CODE  , 'TM_ALCC_MASTER', 'CODE' );
end;

//==============================================================================
// dgInfoTitleClick
//==============================================================================
procedure TfrmU470.dgInfoTitleClick(Column: TColumnEh);
begin
  if Column.Field.DataSet is TADOQuery then
  begin
    with TADOQuery(Column.Field.DataSet) do
    begin
      if RecordCount=0 then Exit ;
      if SrtFlag = 0 then
      begin
        SrtFlag := 1; Sort := Column.FieldName + ' DESC' ;
      end else
      begin
        SrtFlag := 0; Sort := Column.FieldName + ' ASC' ;
      end;
    end;
  end;
end;

//==============================================================================
// KeyPress
//==============================================================================
procedure TfrmU470.KeyPress(Sender: TObject; var Key: Char);
begin
  if key = #13 then
  begin
    fnCommandQuery;
    dgInfoCellClick(Nil);
    TmpLine := qryInfo.FieldByName('LINE').AsString ;
  end;
end;

//==============================================================================
// cbDateClick
//==============================================================================
procedure TfrmU470.cbDateClick(Sender: TObject);
begin
  if (Sender as TCheckBox).Checked then
  begin
    DatePicker1.Enabled := True;
    TimePicker1.Enabled := True;
    DatePicker2.Enabled := True;
    TimePicker2.Enabled := True;
  end else
  begin
    DatePicker1.Enabled := False;
    TimePicker1.Enabled := False;
    DatePicker2.Enabled := False;
    TimePicker2.Enabled := False;
  end;
end;

//==============================================================================
// DatePicker2Change [종료일자]
//==============================================================================
procedure TfrmU470.DatePicker2Change(Sender: TObject);
begin
  if StrToInt(FormatDateTime('YYYYMMDD', DatePicker1.Date)) >
     StrToInt(FormatDateTime('YYYYMMDD', DatePicker2.Date)) then
  begin
    ShowMessage('시작일자보다 이전 일자를 선택하셨습니다.');
    (Sender as TDateTimePicker).Date := DatePicker1.Date;
  end;
end;

//==============================================================================
// dgInfoDrawColumnCell
//==============================================================================
procedure TfrmU470.dgInfoDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumnEh; State: TGridDrawState);
begin
{
  with dgInfo do
  begin
    if qryInfo.RecordCount = 0 then Exit ;
    if DataCol in [2] then
    begin
      if StrToInt(Column.Field.DataSet.FieldByName('IN_CNT').AsString) <> 0 then
      begin
        Canvas.Font.Color := clBlue;
        Canvas.Font.Style := [fsBold];
      end else
      begin
        Canvas.Font.Color := clBlack;
        Canvas.Font.Style := [];
      end;
    end;
    dgInfo.defaultdrawcolumncell(rect, datacol, column, state);
  end;
  }
end;

//==============================================================================
// dgInfoDrawColumnCell
//==============================================================================
procedure TfrmU470.dgInfo_SubDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumnEh; State: TGridDrawState);
begin
  with dgInfo_Sub do
  begin
    if qryInfo_Sub.RecordCount = 0 then Exit ;
    if DataCol in [4] then
    begin
      if StrToInt(Column.Field.DataSet.FieldByName('IN_CNT').AsString) <> 0 then
      begin
        Canvas.Font.Color := clBlue;
        Canvas.Font.Style := [fsBold];
      end else
      begin
        Canvas.Font.Color := clBlack;
        Canvas.Font.Style := [];
      end;
    end;
    dgInfo_Sub.defaultdrawcolumncell(rect, datacol, column, state);
  end;
end;

end.




