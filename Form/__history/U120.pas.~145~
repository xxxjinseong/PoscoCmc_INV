unit U120;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, d_MainDm, h_MainLib, h_ReferLib, StdCtrls, DB, ADODB,
  Grids, StrUtils, DBGrids, comobj, frxClass, frxDBSet, DBGridEhGrouping, EhLibADO,
  ToolCtrlsEh, DBGridEhToolCtrls, DynVarsEh, EhLibVCL, GridsEh, DBAxisGridsEh,DBGridEhImpExp,
  DBGridEh, Vcl.Mask, Vcl.DBCtrls, DBCtrlsEh, PrnDbgeh, Vcl.Buttons, Vcl.Menus ;

type
  TfrmU120 = class(TForm)
    dsInfo: TDataSource;
    qryInfo: TADOQuery;
    qryTemp: TADOQuery;
    shpB: TShape;
    shpL: TShape;
    shpR: TShape;
    shpT: TShape;
    EhPrint: TPrintDBGridEh;
    pmControl: TPopupMenu;
    mnCodeDel: TMenuItem;
    Pnl_Base: TPanel;
    Pnl_Main: TPanel;
    dgInfo: TDBGridEh;
    Panel2: TPanel;
    Panel3: TPanel;
    Splitter1: TSplitter;
    dgInfoSub: TDBGridEh;
    Pnl_Top: TPanel;
    Panel1: TPanel;
    Panel11: TPanel;
    Panel9: TPanel;
    Panel8: TPanel;
    sbtClear: TSpeedButton;
    edtCode: TEdit;
    Panel4: TPanel;
    edtName: TEdit;
    Panel5: TPanel;
    cbAdmin_YN: TComboBox;
    qryInfoSub: TADOQuery;
    dsInfoSub: TDataSource;
    CheckBoxAll: TCheckBox;
    Panel6: TPanel;
    Panel7: TPanel;
    Panel10: TPanel;
    Panel12: TPanel;
    sbtUsed: TSpeedButton;
    Panel13: TPanel;
    sbtNone: TSpeedButton;
    SlectCnt: TLabel;
    qryTempSub: TADOQuery;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormActivate(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDeactivate(Sender: TObject);
    procedure dgInfoTitleClick(Column: TColumnEh);
    procedure ComboChange(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure KeyPress(Sender: TObject; var Key: Char);
    procedure mnCodeDelClick(Sender: TObject);
    procedure dgInfoCellClick(Column: TColumnEh);
    procedure sbtClearClick(Sender: TObject);
    procedure edtChange(Sender: TObject);
    procedure pmControlPopup(Sender: TObject);
    procedure Pnl_MainResize(Sender: TObject);
    procedure Splitter1Moved(Sender: TObject);
    procedure CheckBoxAllClick(Sender: TObject);
    procedure dgInfoSubDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumnEh; State: TGridDrawState);
    procedure dgInfoSubSelectionChanged(Sender: TObject);
    procedure dgInfoSubCellClick(Column: TColumnEh);

    procedure sbtUsedClick(Sender: TObject);
    procedure dgInfoDblClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure fnCommandStart;
    procedure fnCommandAdd  ;
    procedure fnCommandExcel;
    procedure fnCommandDelete;
    procedure fnCommandPrint;
    procedure fnCommandQuery;
    procedure fnCommandClose;
    procedure fnWmMsgRecv (var MSG : TMessage) ; message WM_USER ;
    procedure SetComboBox ;
    procedure fnCommandQuerySub(Code:String);
    procedure ProcDeleteCode(Code: String);
    procedure ProcUpdateCode(Code,MenuNo,Used: String);
  end;
  procedure U120Create();

const
  FormNo ='120';

var
  frmU120: TfrmU120;
  SrtFlag : integer = 0 ;

implementation

uses Main, U120_Pop ;

{$R *.dfm}

//==============================================================================
// U120Create
//==============================================================================
procedure U120Create();
begin
  if not Assigned( frmU120 ) then
  begin
    frmU120 := TfrmU120.Create(Application);
    with frmU120 do
    begin
      fnCommandStart;
    end;
  end;
  frmU120.Show;
end;

//==============================================================================
// fnWmMsgRecv
//==============================================================================
procedure TfrmU120.fnWmMsgRecv(var MSG: TMessage);
begin
  case MSG.WParam of
    MSG_MDI_WIN_ADD     : begin fnCommandAdd     ; end;
    MSG_MDI_WIN_EXCEL   : begin fnCommandExcel   ; end;
    MSG_MDI_WIN_DELETE  : begin fnCommandDelete  ; end;
    MSG_MDI_WIN_PRINT   : begin fnCommandPrint   ; end;
    MSG_MDI_WIN_QUERY   : begin fnCommandQuery   ; end;
    MSG_MDI_WIN_CLOSE   : begin fnCommandClose   ; Close; end;
  end;
end;

//==============================================================================
// FormCreate
//==============================================================================
procedure TfrmU120.FormCreate(Sender: TObject);
begin
//
end;

//==============================================================================
// FormShow
//==============================================================================
procedure TfrmU120.FormShow(Sender: TObject);
begin
//
end;

//==============================================================================
// FormActivate
//==============================================================================
procedure TfrmU120.FormActivate(Sender: TObject);
begin
  frmMain.LblMenu000.Caption := (Sender as TForm).Caption ;
  if MainDM.M_Info.UserAdmin = 'Y' then
  begin
    fnWmMsgSend( 12121, 111 );
  end else
  begin
    fnWmMsgSend( 22221, 111 );
  end;
  SetComboBox;
  fnCommandQuery ;
end;

//==============================================================================
// FormDeactivate
//==============================================================================
procedure TfrmU120.FormDeactivate(Sender: TObject);
var
  i : integer ;
begin
  for i := 0 to Self.ComponentCount-1 do
  begin
    if (Self.Components[i] is TTimer) then
       (Self.Components[i] as TTimer).Enabled := False ;
  end;
end;

//==============================================================================
// FormClose
//==============================================================================
procedure TfrmU120.FormClose(Sender: TObject; var Action: TCloseAction);
var
  i : integer ;
begin
  for i := 0 to Self.ComponentCount-1 do
  begin
    if (Self.Components[i] is TTimer) then
       (Self.Components[i] as TTimer).Enabled := False ;
    if (Self.Components[i] is TADOQuery) then
       (Self.Components[i] as TADOQuery).Active := False ;
  end;

  Action := Cafree;
  try frmU120 := Nil ;
  except end;
end;

//==============================================================================
// fnCommandStart [시작]
//==============================================================================
procedure TfrmU120.fnCommandStart;
begin
//
end;

//==============================================================================
// fnCommandAdd [신규]
//==============================================================================
procedure TfrmU120.fnCommandAdd  ;
begin
  frmU120_Pop := TfrmU120_Pop.Create(Application);
  frmU120_Pop.PnlFormName.Caption := '사용자 코드 등록';
  frmU120_Pop.Caption := '사용자 코드 관리';
  frmU120_Pop.btnSave.Caption := '등 록';

  // 사용자코드
  frmU120_Pop.edtUSERID.Text  := '';
  frmU120_Pop.edtUSERID.Color := clWhite;
  frmU120_Pop.edtUSERID.ReadOnly := False;

  // 사용자명
  frmU120_Pop.edtUSERID.Text  := '';
  frmU120_Pop.edtUSERID.Color := clWhite;
  frmU120_Pop.edtUSERID.ReadOnly := False;

  // 사용자암호
  frmU120_Pop.edtPW.Text  := '';
  frmU120_Pop.edtPW.Color := clWhite;
  frmU120_Pop.edtPW.ReadOnly := False;

  // 암호확인
  frmU120_Pop.edtPWCheck.Text  := '';
  frmU120_Pop.edtPWCheck.Color := clWhite;
  frmU120_Pop.edtPWCheck.ReadOnly := False;

  // 사용자정보
  frmU120_Pop.edtETC.Text  := '';
  frmU120_Pop.edtETC.Color := clWhite;
  frmU120_Pop.edtETC.ReadOnly := False;

  // 사용자권한
  frmU120_Pop.cbAUTHORITY.ItemIndex := 0;
  frmU120_Pop.cbAUTHORITY.Color := clWhite;

  // 현재암호
  frmU120_Pop.PnlCurrPW.Visible := False;
  frmU120_Pop.edtCurrPW.Visible := False;

  frmU120_Pop.ShowModal ;
end;

//==============================================================================
// fnCommandExcel [엑셀]
//==============================================================================
procedure TfrmU120.fnCommandExcel;
begin
  if hlbEhgridListExcel(dgInfo, '사용자코드' + '_' + FormatDatetime('YYYYMMDD', Now)) then
  begin
    MessageDlg('  엑셀 저장을 완료하였습니다.', mtConfirmation, [mbYes], 0);
  end;
end;

//==============================================================================
// fnCommandDelete [삭제]
//==============================================================================
procedure TfrmU120.fnCommandDelete;
var
  i : Integer;
  tmpCode : String;
begin
  if not qryInfo.Active then Exit;
  if dgInfo.SelectedRows.Count < 1 then Exit ;

  if qryInfo.FieldByName('USER_ID').AsString = MainDM.M_Info.UserCode then
  begin
    MessageDlg('  현재 로그인계정은 삭제 할 수 없습니다.', mtWarning, [mbYes], 0) ;
    Exit;
  end;

  if MainDM.M_Info.UserAdmin <> 'Y' then
  begin
    MessageDlg('  현재 로그인계정은 관리자 권한이 아니므로 삭제 할 수 없습니다.', mtWarning, [mbYes], 0) ;
    Exit;
  end;

  tmpCode := UpperCase(qryInfo.FieldByName('USER_ID').AsString);
  if MessageDlg('  선택한 사용자코드['+tmpCode+']를 삭제하시겠습니까?', mtConfirmation, [mbYes, mbNo], 0) <> mrYes then Exit ;

  for i := 0 to (dgInfo.SelectedRows.Count-1) do
  begin
    with dgInfo.DataSource.DataSet do
    begin
      GotoBookmark(pointer(dgInfo.SelectedRows.Items[i]));
      ProcDeleteCode(UpperCase(qryInfo.FieldByName('USER_ID').AsString));
    end;
  end;
  SetComboBox;
  fnCommandQuery;
  if qryInfoSub.Active then qryInfoSub.Close;
end;

//==============================================================================
// fnCommandPrint [인쇄]
//==============================================================================
procedure TfrmU120.fnCommandPrint;
begin
  if not qryInfo.Active then Exit;
  fnCommandQuery;
  EhPrint.DBGridEh := dgInfo;
  EhPrint.PageFooter.RightText.Clear;
  EhPrint.PageFooter.RightText.Add(FormatDateTime('YYYY-MM-DD HH:NN:SS',Now()) + '   ' +
                                   MainDM.M_Info.UserCode+' / '+MainDM.M_Info.UserName);
  EhPrint.PageFooter.Font.Name := '돋움';
  EhPrint.PageFooter.Font.Size := 11;
  EhPrint.Preview;
end;

//==============================================================================
// fnCommandQuery [조회]
//==============================================================================
procedure TfrmU120.fnCommandQuery;
var
  WhereStr, StrSQL : String;
begin
  try
    WhereStr := '' ;
    // 품목코드
    if (Trim(edtCode.Text) <> '') then
      WhereStr := WhereStr + ' AND USER_ID LIKE ' + QuotedStr('%'+edtCode.Text+'%') ;
    // 품목명
    if (Trim(edtName.Text) <> '') then
      WhereStr := WhereStr + ' AND USER_NM LIKE ' + QuotedStr('%'+edtName.Text+'%') ;
    // 관리자권한
    if (cbAdmin_YN.Text <> '전체') then
      WhereStr := WhereStr + ' AND ADMIN_YN LIKE ' + QuotedStr('%'+cbAdmin_YN.Text+'%') ;

    with qryInfo do
    begin
      Close;
      SQL.Clear;
      StrSQL := ' SELECT ROW_NUMBER() OVER(ORDER BY USER_ID) as IDX, * ' +
                '   FROM TT_USER WITH (NOLOCK) ' +
                '  WHERE 1 = 1 ' + WhereStr +
                '    AND WMS_NO = ' + QuotedStr(MainDM.M_Info.WMS_NO);
      SQL.Text := StrSQL;
      Open;
    end;
  except
    on E : Exception do
    begin
      if qryInfo.Active then qryInfo.Close;
      TraceLogWrite( '[120] 사용자코드 에러 | ' +
                     'fnCommandQuery -> StrSQL : ['+StrSQL+
                     '], Exception : ['+E.Message+']');
    end;
  end ;
end;

//==============================================================================
// fnCommandQuery [하위조회]
//==============================================================================
procedure TfrmU120.fnCommandQuerySub(Code:String);
var
  WhereStr, StrSQL : String;
begin
  try
    CheckBoxAll.Checked := False;
    if Trim(Code) = '' then Exit;

    with qryInfoSub do
    begin
      Close;
      SQL.Clear;
      StrSQL := ' SELECT ROW_NUMBER() OVER(ORDER BY L.MENU_ID) as IDX, ' +
                '        (SELECT MENU_NM                      ' +
                '           FROM TT_MENU WITH (NOLOCK)        ' +
                '          WHERE WMS_NO = L.WMS_NO            ' +
                '            AND MENU_ID = M.MENU_INFO_1 ) GP_NM, ' +
                '        L.USER_ID, L.MENU_ID, L.MENU_NM, L.USED_YN ' +
                '   FROM TT_USER_MENU L WITH (NOLOCK) ' +
                '   LEFT JOIN TT_MENU M WITH (NOLOCK) ' +
                '     ON L.WMS_NO  = M.WMS_NO  ' +
                '    AND L.MENU_ID = M.MENU_ID ' +
                '  WHERE L.WMS_NO  = ' + QuotedStr(MainDM.M_Info.WMS_NO) +
                '    AND L.USER_ID = ' + QuotedStr(Code) +
                '    AND M.MENU_LVL = 2 ' +
                '  ORDER BY M.MENU_ID ';
      SQL.Text := StrSQL;
      Open;
    end;
  except
    on E : Exception do
    begin
      if qryInfoSub.Active then qryInfoSub.Close;
      TraceLogWrite( '[120] 사용자코드 에러 | ' +
                     'fnCommandQuerySub -> StrSQL : ['+StrSQL+
                     '], Exception : ['+E.Message+']');
    end;
  end ;
end;

//==============================================================================
// fnCommandClose [닫기]
//==============================================================================
procedure TfrmU120.fnCommandClose;
begin
  Close;
end;

//==============================================================================
// SetComboBox
//==============================================================================
procedure TfrmU120.SetComboBox;
begin
//
end;

//==============================================================================
// dgInfoCellClick
//==============================================================================
procedure TfrmU120.dgInfoCellClick(Column: TColumnEh);
var
  tmpCode : String;
begin
  try
    SlectCnt.Caption := '0';
    dgInfoSub.SelectedRows.Clear;
    if (not qryInfo.Active) or (qryInfo.RecordCount = 0) then Exit;
    tmpCode := UpperCase(qryInfo.FieldByName('USER_ID').AsString);
    fnCommandQuerySub(tmpCode);
  except
    on E : Exception do
    begin
      if qryInfo.Active then qryInfo.Close;
      TraceLogWrite( '[120] 사용자코드 에러 | ' +
                     'dgInfoCellClick -> Exception : ['+E.Message+']');
    end;
  end;
end;

//==============================================================================
// dgInfoDblClick : 사용자 수정
//==============================================================================
procedure TfrmU120.dgInfoDblClick(Sender: TObject);
begin
  if MainDM.M_Info.UserAdmin <> 'Y' then Exit;

  frmU120_Pop := TfrmU120_Pop.Create(Application);
  frmU120_Pop.PnlFormName.Caption := '사용자 코드 수정';
  frmU120_Pop.Caption := '사용자 코드 관리';
  frmU120_Pop.btnSave.Caption := '수 정';

  // 사용자 코드
  frmU120_Pop.edtUSERID.Text  := UpperCase(qryInfo.FieldByName('USER_ID').AsString);
  frmU120_Pop.edtUSERID.Color := $00E9F3E9;
  frmU120_Pop.edtUSERID.ReadOnly := True;

  // 사용자 코드
  frmU120_Pop.edtUSERNM.Text  := UpperCase(qryInfo.FieldByName('USER_NM').AsString);
  frmU120_Pop.edtUSERNM.Color := clWhite;
  frmU120_Pop.edtUSERNM.ReadOnly := False;

  // 사용자 암호
  frmU120_Pop.edtPW.Text  := UpperCase(qryInfo.FieldByName('USER_PW').AsString);
  frmU120_Pop.edtPW.Color := clWhite;
  frmU120_Pop.edtPW.ReadOnly := False;

  // 암호확인
  frmU120_Pop.edtPWCheck.Text  := UpperCase(qryInfo.FieldByName('USER_PW').AsString);
  frmU120_Pop.edtPWCheck.Color := clWhite;
  frmU120_Pop.edtPWCheck.ReadOnly := False;

  // 사용자 정보
  frmU120_Pop.edtETC.Text  := UpperCase(qryInfo.FieldByName('USER_INFO_1').AsString);
  frmU120_Pop.edtETC.Color := clWhite;
  frmU120_Pop.edtETC.ReadOnly := False;

  // 사용자 권한
  frmU120_Pop.cbAUTHORITY.Text := UpperCase(qryInfo.FieldByName('ADMIN_YN').AsString);
  frmU120_Pop.cbAUTHORITY.Color := clWhite;

  // 현재암호
  frmU120_Pop.PnlCurrPW.Visible := True;
  frmU120_Pop.edtCurrPW.Visible := True;

  frmU120_Pop.ShowModal ;

  if MainDM.M_Info.UserAdmin = 'Y' then
  begin
    frmMain.cmdSetUp.Enabled := True;
    fnWmMsgSend( 12121, 111 );
  end else
  begin
    frmMain.cmdSetUp.Enabled := False;
    fnWmMsgSend( 22221, 111 );
  end;
end;

//==============================================================================
// dgInfoSubCellClick
//==============================================================================
procedure TfrmU120.dgInfoSubCellClick(Column: TColumnEh);
begin
  if not qryInfoSub.Active then Exit;
  if qryInfoSub.IsEmpty then Exit;
  dgInfoSub.SelectedRows.CurrentRowSelected := Not dgInfoSub.SelectedRows.CurrentRowSelected;
end;

//==============================================================================
// ComboChange
//==============================================================================
procedure TfrmU120.ComboChange(Sender: TObject);
begin
  if (Trim((Sender as TComboBox).Text) <> '') then
  begin
    fnCommandQuery;
  end;
end;

//==============================================================================
// edtChange
//==============================================================================
procedure TfrmU120.edtChange(Sender: TObject);
begin
  fnCommandQuery;
end;

//==============================================================================
// ProcDeleteCode [선택코드삭제]
//==============================================================================
procedure TfrmU120.ProcDeleteCode(CODE: String);
var
  ExecNo : integer;
  StrSQL : String;
begin
  try
    //=======================
    // 사용자 삭제
    //=======================
    StrSQL := ' DELETE FROM TT_USER ' +
              '  WHERE WMS_NO  = ' + QuotedStr(MainDM.M_Info.WMS_NO) +
              '    AND USER_ID = ' + QuotedStr(CODE) ;

    with qryTemp do
    begin
      Close;
      SQL.Clear;
      SQL.Text := StrSQL;
      ExecNo := ExecSQL;
      if ExecNo > 0 then
        TraceLogWrite('[120] 사용자코드 삭제 - 삭제코드['+CODE+'], 시행코드['+MainDm.M_Info.UserCode+']')
      else
        TraceLogWrite('[120] 사용자코드 삭제 실패 - 삭제코드['+CODE+'], 시행코드['+MainDm.M_Info.UserCode+']');
      Close;
    end;

    //=======================
    // 사용자 메뉴 삭제
    //=======================
    StrSQL := ' DELETE FROM TT_USER_MENU ' +
              '  WHERE WMS_NO  = ' + QuotedStr(MainDM.M_Info.WMS_NO) +
              '    AND USER_ID = ' + QuotedStr(CODE) ;

    with qryTemp do
    begin
      Close;
      SQL.Clear;
      SQL.Text := StrSQL;
      ExecNo := ExecSQL;
      if ExecNo > 0 then
        TraceLogWrite('[120] 사용자코드 메뉴 삭제 - 사용자코드['+CODE+'], 로그인계정['+MainDm.M_Info.UserCode+']')
      else
        TraceLogWrite('[120] 사용자코드 메뉴 삭제 실패 - 사용자코드['+CODE+'], 로그인계정['+MainDm.M_Info.UserCode+']');
      Close;
    end;
  except
    on E : Exception do
    begin
      qryTemp.Close;
      TraceLogWrite('[120] 사용자코드 - 에러['+E.Message+'], 쿼리['+StrSQL+']');
    end;
  end;
end;

//==============================================================================
// dgInfoSubDrawColumnCell
//==============================================================================
procedure TfrmU120.dgInfoSubDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumnEh; State: TGridDrawState);
begin
  with dgInfoSub do
  begin
    if Column.Field.DataSet.FieldByName('USED_YN').AsString = 'Y' then
    begin
      begin
      Canvas.Font.Color := clBlack;
      Canvas.Font.Style := [];
      end;
    end else
    begin
      Canvas.Font.Color := clRed;
      Canvas.Font.Style := [];
    end;
    dgInfoSub.defaultdrawcolumncell(rect, datacol, column, state);
  end;
end;

//==============================================================================
// pmControlPopup
//==============================================================================
procedure TfrmU120.pmControlPopup(Sender: TObject);
begin
  if qryInfo.RecordCount < 1 then Exit;
  if dgInfo.SelectedRows.Count < 1 then Exit ;

  if MainDM.M_Info.UserAdmin = 'Y' then
  begin
    mnCodeDel.Visible := True;
  end else
  begin
    mnCodeDel.Visible := False;
  end;
end;

//==============================================================================
// mnCodeDelClick
//==============================================================================
procedure TfrmU120.mnCodeDelClick(Sender: TObject);
begin
  fnCommandDelete;
end;

//==============================================================================
// KeyPress
//==============================================================================
procedure TfrmU120.KeyPress(Sender: TObject; var Key: Char);
begin
  if key = #13 then
  begin
    fnCommandQuery;
  end;
end;

//==============================================================================
// sbtClearClick
//==============================================================================
procedure TfrmU120.sbtClearClick(Sender: TObject);
begin
  edtCode.Text := '';
  edtName.Text := '';
  cbAdmin_YN.ItemIndex := 0;
  dgInfoSub.SelectedRows.Clear;
  fnCommandQuery;
end;

//==============================================================================
// Pnl_MainResize
//==============================================================================
procedure TfrmU120.Pnl_MainResize(Sender: TObject);
begin
  dgInfo.Width := ((Sender as TPanel).Width - 10) div 2;
  CheckBoxAll.Left := dgInfoSub.Left + 19;
end;

//==============================================================================
// Splitter1Moved
//==============================================================================
procedure TfrmU120.Splitter1Moved(Sender: TObject);
begin
  CheckBoxAll.Left := dgInfoSub.Left + 19;
end;

//==============================================================================
// CheckBoxAllClick
//==============================================================================
procedure TfrmU120.CheckBoxAllClick(Sender: TObject);
begin
  if not qryInfoSub.Active then Exit;
  if qryInfoSub.IsEmpty then Exit;

  qryInfoSub.First;
  if CheckBoxAll.Checked then dgInfoSub.SelectedRows.SelectAll
  else                        dgInfoSub.SelectedRows.Clear;

  SlectCnt.Caption := IntToStr(dgInfoSub.SelectedRows.Count);
end;

//==============================================================================
// dgInfoTitleClick
//==============================================================================
procedure TfrmU120.dgInfoTitleClick(Column: TColumnEh);
begin
  if Column.Field.DataSet is TADOQuery then
  begin
    with TADOQuery(Column.Field.DataSet) do
    begin
      if RecordCount=0 then Exit ;
      if SrtFlag = 0 then
      begin
        SrtFlag := 1; Sort := Column.FieldName + ' DESC' ;
      end else
      begin
        SrtFlag := 0; Sort := Column.FieldName + ' ASC' ;
      end;
    end;
  end;
end;

//==============================================================================
// dgInfoTitleClick
//==============================================================================
procedure TfrmU120.dgInfoSubSelectionChanged(Sender: TObject);
begin
  SlectCnt.Caption := IntToStr(dgInfoSub.SelectedRows.Count);
end;

//==============================================================================
// sbtUsedClick
//==============================================================================
procedure TfrmU120.sbtUsedClick(Sender: TObject);
var
  i : Integer;
  StrSQL, Used : String;
begin
  if not qryInfoSub.Active then Exit;
  if dgInfoSub.SelectedRows.Count < 1 then Exit ;
  Used := UpperCase((Sender as TSpeedButton).Hint);

  if MessageDlg('  사용자의 메뉴권한을 ' + (Sender AS TSpeedButton).Caption+ ' (으)로 '  + #13#10 +
                '  변경 하시겠습니까? ', mtConfirmation, [mbYes, mbNo], 0) <> mrYes then Exit ;

  for i := 0 to (dgInfoSub.SelectedRows.Count-1) do
  begin
    with dgInfoSub.DataSource.DataSet do
    begin
      GotoBookmark(pointer(dgInfoSub.SelectedRows.Items[i]));
      ProcUpdateCode(UpperCase(qryInfoSub.FieldByName('USER_ID').AsString),
                     UpperCase(qryInfoSub.FieldByName('MENU_ID').AsString),
                     Used);
    end;
  end;
  SlectCnt.Caption := '0';
  dgInfoSub.SelectedRows.Clear;
  if (not qryInfoSub.Active) or (qryInfoSub.RecordCount = 0) then Exit;
  fnCommandQuerySub(UpperCase(qryInfoSub.FieldByName('USER_ID').AsString));
end;

//==============================================================================
// ProcUpdateCode : 사용자 메뉴권한 업데이트
//==============================================================================
procedure TfrmU120.ProcUpdateCode(Code,MenuNo,Used: String);
var
  ExecNo : integer;
  StrSQL : String;
begin
  try
    StrSQL := ' UPDATE TT_USER_MENU ' +
              '    SET USED_YN = ' + QuotedStr(Used) +
              '  WHERE WMS_NO  = ' + QuotedStr(MainDM.M_Info.WMS_NO) +
              '    AND USER_ID = ' + QuotedStr(Code) +
              '    AND MENU_ID = ' + QuotedStr(MenuNo) ;

    with qryTempSub do
    begin
      Close;
      SQL.Clear;
      SQL.Text := StrSQL;
      ExecNo := ExecSQL;
      if ExecNo > 0 then
      begin
        if Code = MainDM.M_Info.UserCode then
          FrmMain.fnSetMenuLblClick(MenuNo, Used);
        TraceLogWrite('[120] 메뉴권한 업데이트 - 사용자코드['+CODE+
                      '], 메뉴번호['+MenuNo+'], 사용여부['+Used+
                      '], 로그인계정['+MainDm.M_Info.UserCode+']');
      end else
      begin
        TraceLogWrite('[120] 메뉴권한 업데이트 실패 - 사용자코드['+CODE+
                      '], 메뉴번호['+MenuNo+'], 사용여부['+Used+
                      '], 로그인계정['+MainDm.M_Info.UserCode+']');
      end;
      Close;
    end;
  except
    on E : Exception do
    begin
      if qryTempSub.Active then qryTempSub.Close;
      TraceLogWrite( '[120] 사용자코드 에러 | ' +
                     'ProcUpdateCode -> 사용자코드 : ['+CODE+
                     '], 메뉴번호 : ['+MenuNo+'], 사용여부 : ['+Used+
                     '], StrSQL : ['+StrSQL+
                     '], Exception : ['+E.Message+']');
    end;
  end;
end;

end.




